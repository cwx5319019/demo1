#include<stdio.h>

#if 0
13.字符数组
目录
1.复习	2
2.字符串和字符数组的概念	2
3.字符数组和ASCII码	2
4.字符数组的操作	2
5.二维字符数组	2
6.作业	3
7.预习	3

 
1.复习
上一级课我们讲的内容
2.指针
2.1.指针的概念	
2.2.指针的声明和定义	
3.指针的操作	
3.1.指针的地址操作	
3.2.指针的数据操作	
3.3.void型指针	
3.4.常量指针和指针常量	
3.5.指针数组和数组指针	
3.6.二级指针	
4.段错误的演示	
4.1.段错误的原因	
4.2.段错误的处理	
4.3.一些注意事项	
5.作业	

2.字符串和字符数组的概念
字符串通常指的是C语言中的一串字符常量，在 C 语言中字符串(字符串常量)是用双引号括起的任意字符序列，在字符串中也可以包含转义序列。如：“Hello world”
字符串在内存中存放的方式是一个以结束符‘\0’为结尾的字符数组，数组中的每一个元素都存放了一个字符，数组元素的类型为 char。
字符数组是用来存放字符的数组，字符数组中的一个元素存放一个字符。
在C语言中没有专门的字符串变量，通常用一个字符数组来存放一个字符串，而且字符串的末尾有一个结束符‘\0’。‘\0’是C语言系统默认放置的，程序员也可以自己添加，这是字符数组却别于其他所有数组的地方。

3.字符数组和ASCII码
因为字符串和字符数组的类似性，所以有关字符串的操作都以字符数组为例子。
之前我们已经学习过数组相关的知识了，字符数组的基本操作和整型数组类似，唯一区别的是字符数组操作的过程中，系统会默认给字符串末尾自动添加一个‘\0’，所以在字符操作时要注意字符数组的容量，即数组的大小不但能放置有效数据的同时，也要有多余的一个字符空间放置‘\0’。它的一般形式：
char 变量名[常量表达式];

3.1字符数组的初始化
之前我们学习过整型数组的初始化，同样字符数组也适合。
不同的是，如果用字符元素进行初始化，要注意字符格式。
字符数组的使用有两种方式，一种是单个字符的使用，可以使用下标法查询；另一种是当成整个字符串来使用，一次性的操作整个字符数组。

演示：
demo01.c – 字符串的初始化和输入输出

3.2 ASCII码
我们在第一天上课的时候就提到过ASCII码，但是没有学习具体的使用，所以现在我们就来重点学习一下。ASCII码表的信息：
★	字母有大写和小写之分
★	ASCII数字和整型数字的数值不同
★	标点符号的ASCII码值并不是整齐排列的
★	上下左右等特殊字符也有对应的ASCII码值

演示：
demo02.c – 区分ASCII数字和整型数字

demo03.c – 字符提取


demo04.c – 字符串大小写转换
demo05.c – 字符数组排序


demo06.c – ASCII的特殊应用


4.字符操作函数
生活中需要处理的信息，基本上分成两类，一个是文字；另一个是数字。
数字的信息，我们之前学习了基本数据类型和数组等处理方式。而字符串通常是当作一个整体来处理的，就比如一个人的名字是由整个姓氏组成的。那么我们就需要一些函数来快速的处理字符串信息，来获得我们所需的信息。
现在我们就学习一些系统库里的一些模板字符串处理函数：
先man一下字符串库函数头文件string.h
★	获取字符串长度函数
★	int strlen(char const *string);
	传入的实参可以是字符数组或者指向字符串的字符指针
	返回字符的个数不包括结束符‘\0’

★	字符串拷贝函数
★	char *strcpy(char* des, char* src)
★	char *strncpy(char* des, char* src, int size)
	把src指向的字符串拷贝到des指向的字符数组中，结束符‘\0’也一同拷贝。加上size参数可以拷贝指定长度的字符串。推荐使用strncpy
	传入的实参 src 可以是字符串也可以是字符数组，但 des建议是字符数组。

★	字符串连接函数
★	char* strcat(const char* str1, const char* str2)
★	char* strncat(char* str1, const char* str2, int size)
	把str2指向的字符串连接到str1指向的字符串后面，并删除str1指向的字符串后面的结束符‘\0’。函数返回str1指向的字符串首地址。

★	字符串比较函数
★	int strcmp(const char* str1, const char* str2)
★	int strncmp(const char* str1, const char* str2, int size)
	按照 ASCII 码值比较两个字符串，并由函数返回值确定比较结果。
	字符串1等于字符串2，返回值等于0。
	字符串1大于字符串2，返回值大于0。
	字符串1小于字符串2，返回值小于0。

演示：
demo07.c – 系统string函数


demo08.c – mystrlen

demo09.c – mystrcpy & mystrncpy

demo10.c – mystrcat & mystrncat

demo11.c – mystrcmp & mystrncmp


5.二维字符数组
二维字符数组的概念和二维整型数组是一样的，他们的声明和定义也是一样的，在这里就不详细介绍了。唯一区别很大的是他们的操作理念和方法。
二维字符数组可以进行整行整行的操作，不想二维整型数组只能进行单独元素操作。具体的操作请看演示：
demo12.c – 二维字符数组


6.作业
1.定义一个字符数组str[20]，输入自己的名字，在输出

2.定义两个个字符数组str1[20]和str2[20]，再写一个自己的myStrcpy函数，将自己的名字写在str1中，然用myStrcpy函数将str1里的内容复制到str2中，在将str2的内容输出

3.定义一个msg[3][20]的二维字符数组，将自己的姓名，出生年月，班级名称输入二维数组当中，然将二维数组的内容输出

7.预习
C语言提高篇视频
 






#endif
