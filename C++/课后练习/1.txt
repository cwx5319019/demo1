
./a.out:     file format elf32-i386


Disassembly of section .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	insb   (%dx),%es:(%edi)
 8048156:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804815d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048164:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    $0x0,%al
 804816a:	00 00                	add    %al,(%eax)
 804816c:	10 00                	adc    %al,(%eax)
 804816e:	00 00                	add    %al,(%eax)
 8048170:	01 00                	add    %eax,(%eax)
 8048172:	00 00                	add    %al,(%eax)
 8048174:	47                   	inc    %edi
 8048175:	4e                   	dec    %esi
 8048176:	55                   	push   %ebp
 8048177:	00 00                	add    %al,(%eax)
 8048179:	00 00                	add    %al,(%eax)
 804817b:	00 02                	add    %al,(%edx)
 804817d:	00 00                	add    %al,(%eax)
 804817f:	00 06                	add    %al,(%esi)
 8048181:	00 00                	add    %al,(%eax)
 8048183:	00 18                	add    %bl,(%eax)
 8048185:	00 00                	add    %al,(%eax)
	...

Disassembly of section .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    $0x0,%al
 804818a:	00 00                	add    %al,(%eax)
 804818c:	14 00                	adc    $0x0,%al
 804818e:	00 00                	add    %al,(%eax)
 8048190:	03 00                	add    (%eax),%eax
 8048192:	00 00                	add    %al,(%eax)
 8048194:	47                   	inc    %edi
 8048195:	4e                   	dec    %esi
 8048196:	55                   	push   %ebp
 8048197:	00 48 8c             	add    %cl,-0x74(%eax)
 804819a:	c8 88 a5 38          	enter  $0xa588,$0x38
 804819e:	cd 37                	int    $0x37
 80481a0:	ab                   	stos   %eax,%es:(%edi)
 80481a1:	df 8a 8e bc b7 f2    	fisttp -0xd484372(%edx)
 80481a7:	bc 90 fa fd 53       	mov    $0x53fdfa90,%esp

Disassembly of section .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	02 00                	add    (%eax),%al
 80481ae:	00 00                	add    %al,(%eax)
 80481b0:	08 00                	or     %al,(%eax)
 80481b2:	00 00                	add    %al,(%eax)
 80481b4:	01 00                	add    %eax,(%eax)
 80481b6:	00 00                	add    %al,(%eax)
 80481b8:	05 00 00 00 00       	add    $0x0,%eax
 80481bd:	20 00                	and    %al,(%eax)
 80481bf:	20 00                	and    %al,(%eax)
 80481c1:	00 00                	add    %al,(%eax)
 80481c3:	00 08                	add    %cl,(%eax)
 80481c5:	00 00                	add    %al,(%eax)
 80481c7:	00                   	.byte 0x0
 80481c8:	ad                   	lods   %ds:(%esi),%eax
 80481c9:	4b                   	dec    %ebx
 80481ca:	e3 c0                	jecxz  804818c <_init-0x1a4>

Disassembly of section .dynsym:

080481cc <.dynsym>:
	...
 80481dc:	30 00                	xor    %al,(%eax)
	...
 80481e6:	00 00                	add    %al,(%eax)
 80481e8:	12 00                	adc    (%eax),%al
 80481ea:	00 00                	add    %al,(%eax)
 80481ec:	29 00                	sub    %eax,(%eax)
	...
 80481f6:	00 00                	add    %al,(%eax)
 80481f8:	12 00                	adc    (%eax),%al
 80481fa:	00 00                	add    %al,(%eax)
 80481fc:	3c 00                	cmp    $0x0,%al
	...
 8048206:	00 00                	add    %al,(%eax)
 8048208:	12 00                	adc    (%eax),%al
 804820a:	00 00                	add    %al,(%eax)
 804820c:	35 00 00 00 00       	xor    $0x0,%eax
 8048211:	00 00                	add    %al,(%eax)
 8048213:	00 00                	add    %al,(%eax)
 8048215:	00 00                	add    %al,(%eax)
 8048217:	00 12                	add    %dl,(%edx)
 8048219:	00 00                	add    %al,(%eax)
 804821b:	00 01                	add    %al,(%ecx)
	...
 8048225:	00 00                	add    %al,(%eax)
 8048227:	00 20                	add    %ah,(%eax)
 8048229:	00 00                	add    %al,(%eax)
 804822b:	00 40 00             	add    %al,0x0(%eax)
	...
 8048236:	00 00                	add    %al,(%eax)
 8048238:	12 00                	adc    (%eax),%al
 804823a:	00 00                	add    %al,(%eax)
 804823c:	45                   	inc    %ebp
	...
 8048245:	00 00                	add    %al,(%eax)
 8048247:	00 12                	add    %dl,(%edx)
 8048249:	00 00                	add    %al,(%eax)
 804824b:	00 1a                	add    %bl,(%edx)
 804824d:	00 00                	add    %al,(%eax)
 804824f:	00 fc                	add    %bh,%ah
 8048251:	85 04 08             	test   %eax,(%eax,%ecx,1)
 8048254:	04 00                	add    $0x0,%al
 8048256:	00 00                	add    %al,(%eax)
 8048258:	11 00                	adc    %eax,(%eax)
 804825a:	0f                   	.byte 0xf
	...

Disassembly of section .dynstr:

0804825c <.dynstr>:
 804825c:	00 5f 5f             	add    %bl,0x5f(%edi)
 804825f:	67 6d                	insl   (%dx),%es:(%di)
 8048261:	6f                   	outsl  %ds:(%esi),(%dx)
 8048262:	6e                   	outsb  %ds:(%esi),(%dx)
 8048263:	5f                   	pop    %edi
 8048264:	73 74                	jae    80482da <_init-0x56>
 8048266:	61                   	popa   
 8048267:	72 74                	jb     80482dd <_init-0x53>
 8048269:	5f                   	pop    %edi
 804826a:	5f                   	pop    %edi
 804826b:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 804826f:	63 2e                	arpl   %bp,(%esi)
 8048271:	73 6f                	jae    80482e2 <_init-0x4e>
 8048273:	2e 36 00 5f 49       	cs add %bl,%cs:%ss:0x49(%edi)
 8048278:	4f                   	dec    %edi
 8048279:	5f                   	pop    %edi
 804827a:	73 74                	jae    80482f0 <_init-0x40>
 804827c:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 8048283:	64 
 8048284:	00 70 72             	add    %dh,0x72(%eax)
 8048287:	69 6e 74 66 00 64 75 	imul   $0x75640066,0x74(%esi),%ebp
 804828e:	70 32                	jo     80482c2 <_init-0x6e>
 8048290:	00 73 79             	add    %dh,0x79(%ebx)
 8048293:	73 74                	jae    8048309 <_init-0x27>
 8048295:	65                   	gs
 8048296:	6d                   	insl   (%dx),%es:(%edi)
 8048297:	00 64 75 70          	add    %ah,0x70(%ebp,%esi,2)
 804829b:	00 6f 70             	add    %ch,0x70(%edi)
 804829e:	65 6e                	outsb  %gs:(%esi),(%dx)
 80482a0:	00 5f 5f             	add    %bl,0x5f(%edi)
 80482a3:	6c                   	insb   (%dx),%es:(%edi)
 80482a4:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 80482ab:	72 74                	jb     8048321 <_init-0xf>
 80482ad:	5f                   	pop    %edi
 80482ae:	6d                   	insl   (%dx),%es:(%edi)
 80482af:	61                   	popa   
 80482b0:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%esi),%ebp
 80482b7:	43                   	inc    %ebx
 80482b8:	5f                   	pop    %edi
 80482b9:	32 2e                	xor    (%esi),%ch
 80482bb:	30 00                	xor    %al,(%eax)

Disassembly of section .gnu.version:

080482be <.gnu.version>:
 80482be:	00 00                	add    %al,(%eax)
 80482c0:	02 00                	add    (%eax),%al
 80482c2:	02 00                	add    (%eax),%al
 80482c4:	02 00                	add    (%eax),%al
 80482c6:	02 00                	add    (%eax),%al
 80482c8:	00 00                	add    %al,(%eax)
 80482ca:	02 00                	add    (%eax),%al
 80482cc:	02 00                	add    (%eax),%al
 80482ce:	01 00                	add    %eax,(%eax)

Disassembly of section .gnu.version_r:

080482d0 <.gnu.version_r>:
 80482d0:	01 00                	add    %eax,(%eax)
 80482d2:	01 00                	add    %eax,(%eax)
 80482d4:	10 00                	adc    %al,(%eax)
 80482d6:	00 00                	add    %al,(%eax)
 80482d8:	10 00                	adc    %al,(%eax)
 80482da:	00 00                	add    %al,(%eax)
 80482dc:	00 00                	add    %al,(%eax)
 80482de:	00 00                	add    %al,(%eax)
 80482e0:	10 69 69             	adc    %ch,0x69(%ecx)
 80482e3:	0d 00 00 02 00       	or     $0x20000,%eax
 80482e8:	57                   	push   %edi
 80482e9:	00 00                	add    %al,(%eax)
 80482eb:	00 00                	add    %al,(%eax)
 80482ed:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

080482f0 <.rel.dyn>:
 80482f0:	f0 9f                	lock lahf 
 80482f2:	04 08                	add    $0x8,%al
 80482f4:	06                   	push   %es
 80482f5:	05                   	.byte 0x5
	...

Disassembly of section .rel.plt:

080482f8 <.rel.plt>:
 80482f8:	00 a0 04 08 07 01    	add    %ah,0x1070804(%eax)
 80482fe:	00 00                	add    %al,(%eax)
 8048300:	04 a0                	add    $0xa0,%al
 8048302:	04 08                	add    $0x8,%al
 8048304:	07                   	pop    %es
 8048305:	02 00                	add    (%eax),%al
 8048307:	00 08                	add    %cl,(%eax)
 8048309:	a0 04 08 07 03       	mov    0x3070804,%al
 804830e:	00 00                	add    %al,(%eax)
 8048310:	0c a0                	or     $0xa0,%al
 8048312:	04 08                	add    $0x8,%al
 8048314:	07                   	pop    %es
 8048315:	04 00                	add    $0x0,%al
 8048317:	00 10                	add    %dl,(%eax)
 8048319:	a0 04 08 07 05       	mov    0x5070804,%al
 804831e:	00 00                	add    %al,(%eax)
 8048320:	14 a0                	adc    $0xa0,%al
 8048322:	04 08                	add    $0x8,%al
 8048324:	07                   	pop    %es
 8048325:	06                   	push   %es
 8048326:	00 00                	add    %al,(%eax)
 8048328:	18 a0 04 08 07 07    	sbb    %ah,0x7070804(%eax)
	...

Disassembly of section .init:

08048330 <_init>:
 8048330:	53                   	push   %ebx
 8048331:	83 ec 08             	sub    $0x8,%esp
 8048334:	e8 00 00 00 00       	call   8048339 <_init+0x9>
 8048339:	5b                   	pop    %ebx
 804833a:	81 c3 bb 1c 00 00    	add    $0x1cbb,%ebx
 8048340:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8048346:	85 c0                	test   %eax,%eax
 8048348:	74 05                	je     804834f <_init+0x1f>
 804834a:	e8 61 00 00 00       	call   80483b0 <__gmon_start__@plt>
 804834f:	e8 1c 01 00 00       	call   8048470 <frame_dummy>
 8048354:	e8 57 02 00 00       	call   80485b0 <__do_global_ctors_aux>
 8048359:	83 c4 08             	add    $0x8,%esp
 804835c:	5b                   	pop    %ebx
 804835d:	c3                   	ret    

Disassembly of section .plt:

08048360 <dup2@plt-0x10>:
 8048360:	ff 35 f8 9f 04 08    	pushl  0x8049ff8
 8048366:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 804836c:	00 00                	add    %al,(%eax)
	...

08048370 <dup2@plt>:
 8048370:	ff 25 00 a0 04 08    	jmp    *0x804a000
 8048376:	68 00 00 00 00       	push   $0x0
 804837b:	e9 e0 ff ff ff       	jmp    8048360 <_init+0x30>

08048380 <printf@plt>:
 8048380:	ff 25 04 a0 04 08    	jmp    *0x804a004
 8048386:	68 08 00 00 00       	push   $0x8
 804838b:	e9 d0 ff ff ff       	jmp    8048360 <_init+0x30>

08048390 <dup@plt>:
 8048390:	ff 25 08 a0 04 08    	jmp    *0x804a008
 8048396:	68 10 00 00 00       	push   $0x10
 804839b:	e9 c0 ff ff ff       	jmp    8048360 <_init+0x30>

080483a0 <system@plt>:
 80483a0:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 80483a6:	68 18 00 00 00       	push   $0x18
 80483ab:	e9 b0 ff ff ff       	jmp    8048360 <_init+0x30>

080483b0 <__gmon_start__@plt>:
 80483b0:	ff 25 10 a0 04 08    	jmp    *0x804a010
 80483b6:	68 20 00 00 00       	push   $0x20
 80483bb:	e9 a0 ff ff ff       	jmp    8048360 <_init+0x30>

080483c0 <open@plt>:
 80483c0:	ff 25 14 a0 04 08    	jmp    *0x804a014
 80483c6:	68 28 00 00 00       	push   $0x28
 80483cb:	e9 90 ff ff ff       	jmp    8048360 <_init+0x30>

080483d0 <__libc_start_main@plt>:
 80483d0:	ff 25 18 a0 04 08    	jmp    *0x804a018
 80483d6:	68 30 00 00 00       	push   $0x30
 80483db:	e9 80 ff ff ff       	jmp    8048360 <_init+0x30>

Disassembly of section .text:

080483e0 <_start>:
 80483e0:	31 ed                	xor    %ebp,%ebp
 80483e2:	5e                   	pop    %esi
 80483e3:	89 e1                	mov    %esp,%ecx
 80483e5:	83 e4 f0             	and    $0xfffffff0,%esp
 80483e8:	50                   	push   %eax
 80483e9:	54                   	push   %esp
 80483ea:	52                   	push   %edx
 80483eb:	68 a0 85 04 08       	push   $0x80485a0
 80483f0:	68 30 85 04 08       	push   $0x8048530
 80483f5:	51                   	push   %ecx
 80483f6:	56                   	push   %esi
 80483f7:	68 94 84 04 08       	push   $0x8048494
 80483fc:	e8 cf ff ff ff       	call   80483d0 <__libc_start_main@plt>
 8048401:	f4                   	hlt    
 8048402:	90                   	nop
 8048403:	90                   	nop
 8048404:	90                   	nop
 8048405:	90                   	nop
 8048406:	90                   	nop
 8048407:	90                   	nop
 8048408:	90                   	nop
 8048409:	90                   	nop
 804840a:	90                   	nop
 804840b:	90                   	nop
 804840c:	90                   	nop
 804840d:	90                   	nop
 804840e:	90                   	nop
 804840f:	90                   	nop

08048410 <__do_global_dtors_aux>:
 8048410:	55                   	push   %ebp
 8048411:	89 e5                	mov    %esp,%ebp
 8048413:	53                   	push   %ebx
 8048414:	83 ec 04             	sub    $0x4,%esp
 8048417:	80 3d 24 a0 04 08 00 	cmpb   $0x0,0x804a024
 804841e:	75 3f                	jne    804845f <__do_global_dtors_aux+0x4f>
 8048420:	a1 28 a0 04 08       	mov    0x804a028,%eax
 8048425:	bb 20 9f 04 08       	mov    $0x8049f20,%ebx
 804842a:	81 eb 1c 9f 04 08    	sub    $0x8049f1c,%ebx
 8048430:	c1 fb 02             	sar    $0x2,%ebx
 8048433:	83 eb 01             	sub    $0x1,%ebx
 8048436:	39 d8                	cmp    %ebx,%eax
 8048438:	73 1e                	jae    8048458 <__do_global_dtors_aux+0x48>
 804843a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048440:	83 c0 01             	add    $0x1,%eax
 8048443:	a3 28 a0 04 08       	mov    %eax,0x804a028
 8048448:	ff 14 85 1c 9f 04 08 	call   *0x8049f1c(,%eax,4)
 804844f:	a1 28 a0 04 08       	mov    0x804a028,%eax
 8048454:	39 d8                	cmp    %ebx,%eax
 8048456:	72 e8                	jb     8048440 <__do_global_dtors_aux+0x30>
 8048458:	c6 05 24 a0 04 08 01 	movb   $0x1,0x804a024
 804845f:	83 c4 04             	add    $0x4,%esp
 8048462:	5b                   	pop    %ebx
 8048463:	5d                   	pop    %ebp
 8048464:	c3                   	ret    
 8048465:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048469:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048470 <frame_dummy>:
 8048470:	55                   	push   %ebp
 8048471:	89 e5                	mov    %esp,%ebp
 8048473:	83 ec 18             	sub    $0x18,%esp
 8048476:	a1 24 9f 04 08       	mov    0x8049f24,%eax
 804847b:	85 c0                	test   %eax,%eax
 804847d:	74 12                	je     8048491 <frame_dummy+0x21>
 804847f:	b8 00 00 00 00       	mov    $0x0,%eax
 8048484:	85 c0                	test   %eax,%eax
 8048486:	74 09                	je     8048491 <frame_dummy+0x21>
 8048488:	c7 04 24 24 9f 04 08 	movl   $0x8049f24,(%esp)
 804848f:	ff d0                	call   *%eax
 8048491:	c9                   	leave  
 8048492:	c3                   	ret    
 8048493:	90                   	nop

08048494 <main>:
 8048494:	55                   	push   %ebp
 8048495:	89 e5                	mov    %esp,%ebp
 8048497:	83 e4 f0             	and    $0xfffffff0,%esp
 804849a:	83 ec 30             	sub    $0x30,%esp
 804849d:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 80484a4:	e8 e7 fe ff ff       	call   8048390 <dup@plt>
 80484a9:	89 44 24 18          	mov    %eax,0x18(%esp)
 80484ad:	c7 44 24 08 b6 01 00 	movl   $0x1b6,0x8(%esp)
 80484b4:	00 
 80484b5:	c7 44 24 04 42 00 00 	movl   $0x42,0x4(%esp)
 80484bc:	00 
 80484bd:	c7 04 24 00 86 04 08 	movl   $0x8048600,(%esp)
 80484c4:	e8 f7 fe ff ff       	call   80483c0 <open@plt>
 80484c9:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 80484cd:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 80484d4:	00 
 80484d5:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 80484d9:	89 04 24             	mov    %eax,(%esp)
 80484dc:	e8 8f fe ff ff       	call   8048370 <dup2@plt>
 80484e1:	89 44 24 20          	mov    %eax,0x20(%esp)
 80484e5:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
 80484ec:	00 
 80484ed:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
 80484f4:	00 
 80484f5:	8b 44 24 28          	mov    0x28(%esp),%eax
 80484f9:	8b 54 24 24          	mov    0x24(%esp),%edx
 80484fd:	01 d0                	add    %edx,%eax
 80484ff:	89 44 24 2c          	mov    %eax,0x2c(%esp)
 8048503:	b8 06 86 04 08       	mov    $0x8048606,%eax
 8048508:	8b 54 24 2c          	mov    0x2c(%esp),%edx
 804850c:	89 54 24 04          	mov    %edx,0x4(%esp)
 8048510:	89 04 24             	mov    %eax,(%esp)
 8048513:	e8 68 fe ff ff       	call   8048380 <printf@plt>
 8048518:	c7 04 24 0e 86 04 08 	movl   $0x804860e,(%esp)
 804851f:	e8 7c fe ff ff       	call   80483a0 <system@plt>
 8048524:	b8 00 00 00 00       	mov    $0x0,%eax
 8048529:	c9                   	leave  
 804852a:	c3                   	ret    
 804852b:	90                   	nop
 804852c:	90                   	nop
 804852d:	90                   	nop
 804852e:	90                   	nop
 804852f:	90                   	nop

08048530 <__libc_csu_init>:
 8048530:	55                   	push   %ebp
 8048531:	57                   	push   %edi
 8048532:	56                   	push   %esi
 8048533:	53                   	push   %ebx
 8048534:	e8 69 00 00 00       	call   80485a2 <__i686.get_pc_thunk.bx>
 8048539:	81 c3 bb 1a 00 00    	add    $0x1abb,%ebx
 804853f:	83 ec 1c             	sub    $0x1c,%esp
 8048542:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 8048546:	8d bb 20 ff ff ff    	lea    -0xe0(%ebx),%edi
 804854c:	e8 df fd ff ff       	call   8048330 <_init>
 8048551:	8d 83 20 ff ff ff    	lea    -0xe0(%ebx),%eax
 8048557:	29 c7                	sub    %eax,%edi
 8048559:	c1 ff 02             	sar    $0x2,%edi
 804855c:	85 ff                	test   %edi,%edi
 804855e:	74 29                	je     8048589 <__libc_csu_init+0x59>
 8048560:	31 f6                	xor    %esi,%esi
 8048562:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048568:	8b 44 24 38          	mov    0x38(%esp),%eax
 804856c:	89 2c 24             	mov    %ebp,(%esp)
 804856f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048573:	8b 44 24 34          	mov    0x34(%esp),%eax
 8048577:	89 44 24 04          	mov    %eax,0x4(%esp)
 804857b:	ff 94 b3 20 ff ff ff 	call   *-0xe0(%ebx,%esi,4)
 8048582:	83 c6 01             	add    $0x1,%esi
 8048585:	39 fe                	cmp    %edi,%esi
 8048587:	75 df                	jne    8048568 <__libc_csu_init+0x38>
 8048589:	83 c4 1c             	add    $0x1c,%esp
 804858c:	5b                   	pop    %ebx
 804858d:	5e                   	pop    %esi
 804858e:	5f                   	pop    %edi
 804858f:	5d                   	pop    %ebp
 8048590:	c3                   	ret    
 8048591:	eb 0d                	jmp    80485a0 <__libc_csu_fini>
 8048593:	90                   	nop
 8048594:	90                   	nop
 8048595:	90                   	nop
 8048596:	90                   	nop
 8048597:	90                   	nop
 8048598:	90                   	nop
 8048599:	90                   	nop
 804859a:	90                   	nop
 804859b:	90                   	nop
 804859c:	90                   	nop
 804859d:	90                   	nop
 804859e:	90                   	nop
 804859f:	90                   	nop

080485a0 <__libc_csu_fini>:
 80485a0:	f3 c3                	repz ret 

080485a2 <__i686.get_pc_thunk.bx>:
 80485a2:	8b 1c 24             	mov    (%esp),%ebx
 80485a5:	c3                   	ret    
 80485a6:	90                   	nop
 80485a7:	90                   	nop
 80485a8:	90                   	nop
 80485a9:	90                   	nop
 80485aa:	90                   	nop
 80485ab:	90                   	nop
 80485ac:	90                   	nop
 80485ad:	90                   	nop
 80485ae:	90                   	nop
 80485af:	90                   	nop

080485b0 <__do_global_ctors_aux>:
 80485b0:	55                   	push   %ebp
 80485b1:	89 e5                	mov    %esp,%ebp
 80485b3:	53                   	push   %ebx
 80485b4:	83 ec 04             	sub    $0x4,%esp
 80485b7:	a1 14 9f 04 08       	mov    0x8049f14,%eax
 80485bc:	83 f8 ff             	cmp    $0xffffffff,%eax
 80485bf:	74 13                	je     80485d4 <__do_global_ctors_aux+0x24>
 80485c1:	bb 14 9f 04 08       	mov    $0x8049f14,%ebx
 80485c6:	66 90                	xchg   %ax,%ax
 80485c8:	83 eb 04             	sub    $0x4,%ebx
 80485cb:	ff d0                	call   *%eax
 80485cd:	8b 03                	mov    (%ebx),%eax
 80485cf:	83 f8 ff             	cmp    $0xffffffff,%eax
 80485d2:	75 f4                	jne    80485c8 <__do_global_ctors_aux+0x18>
 80485d4:	83 c4 04             	add    $0x4,%esp
 80485d7:	5b                   	pop    %ebx
 80485d8:	5d                   	pop    %ebp
 80485d9:	c3                   	ret    
 80485da:	90                   	nop
 80485db:	90                   	nop

Disassembly of section .fini:

080485dc <_fini>:
 80485dc:	53                   	push   %ebx
 80485dd:	83 ec 08             	sub    $0x8,%esp
 80485e0:	e8 00 00 00 00       	call   80485e5 <_fini+0x9>
 80485e5:	5b                   	pop    %ebx
 80485e6:	81 c3 0f 1a 00 00    	add    $0x1a0f,%ebx
 80485ec:	e8 1f fe ff ff       	call   8048410 <__do_global_dtors_aux>
 80485f1:	83 c4 08             	add    $0x8,%esp
 80485f4:	5b                   	pop    %ebx
 80485f5:	c3                   	ret    

Disassembly of section .rodata:

080485f8 <_fp_hw>:
 80485f8:	03 00                	add    (%eax),%eax
	...

080485fc <_IO_stdin_used>:
 80485fc:	01 00                	add    %eax,(%eax)
 80485fe:	02 00                	add    (%eax),%al
 8048600:	31 2e                	xor    %ebp,(%esi)
 8048602:	74 78                	je     804867c <_IO_stdin_used+0x80>
 8048604:	74 00                	je     8048606 <_IO_stdin_used+0xa>
 8048606:	63 20                	arpl   %sp,(%eax)
 8048608:	3d 20 25 64 0a       	cmp    $0xa642520,%eax
 804860d:	00 6f 62             	add    %ch,0x62(%edi)
 8048610:	6a 64                	push   $0x64
 8048612:	75 6d                	jne    8048681 <_IO_stdin_used+0x85>
 8048614:	70 20                	jo     8048636 <_IO_stdin_used+0x3a>
 8048616:	2d 44 20 2e 2f       	sub    $0x2f2e2044,%eax
 804861b:	61                   	popa   
 804861c:	2e 6f                	outsl  %cs:(%esi),(%dx)
 804861e:	75 74                	jne    8048694 <_IO_stdin_used+0x98>
	...

Disassembly of section .eh_frame_hdr:

08048624 <.eh_frame_hdr>:
 8048624:	01 1b                	add    %ebx,(%ebx)
 8048626:	03 3b                	add    (%ebx),%edi
 8048628:	30 00                	xor    %al,(%eax)
 804862a:	00 00                	add    %al,(%eax)
 804862c:	05 00 00 00 3c       	add    $0x3c000000,%eax
 8048631:	fd                   	std    
 8048632:	ff                   	(bad)  
 8048633:	ff 4c 00 00          	decl   0x0(%eax,%eax,1)
 8048637:	00 70 fe             	add    %dh,-0x2(%eax)
 804863a:	ff                   	(bad)  
 804863b:	ff 70 00             	pushl  0x0(%eax)
 804863e:	00 00                	add    %al,(%eax)
 8048640:	0c ff                	or     $0xff,%al
 8048642:	ff                   	(bad)  
 8048643:	ff 90 00 00 00 7c    	call   *0x7c000000(%eax)
 8048649:	ff                   	(bad)  
 804864a:	ff                   	(bad)  
 804864b:	ff cc                	dec    %esp
 804864d:	00 00                	add    %al,(%eax)
 804864f:	00 7e ff             	add    %bh,-0x1(%esi)
 8048652:	ff                   	(bad)  
 8048653:	ff e0                	jmp    *%eax
 8048655:	00 00                	add    %al,(%eax)
	...

Disassembly of section .eh_frame:

08048658 <__FRAME_END__-0xc0>:
 8048658:	14 00                	adc    $0x0,%al
 804865a:	00 00                	add    %al,(%eax)
 804865c:	00 00                	add    %al,(%eax)
 804865e:	00 00                	add    %al,(%eax)
 8048660:	01 7a 52             	add    %edi,0x52(%edx)
 8048663:	00 01                	add    %al,(%ecx)
 8048665:	7c 08                	jl     804866f <_IO_stdin_used+0x73>
 8048667:	01 1b                	add    %ebx,(%ebx)
 8048669:	0c 04                	or     $0x4,%al
 804866b:	04 88                	add    $0x88,%al
 804866d:	01 00                	add    %eax,(%eax)
 804866f:	00 20                	add    %ah,(%eax)
 8048671:	00 00                	add    %al,(%eax)
 8048673:	00 1c 00             	add    %bl,(%eax,%eax,1)
 8048676:	00 00                	add    %al,(%eax)
 8048678:	e8 fc ff ff 80       	call   89048679 <_end+0x80ffe64d>
 804867d:	00 00                	add    %al,(%eax)
 804867f:	00 00                	add    %al,(%eax)
 8048681:	0e                   	push   %cs
 8048682:	08 46 0e             	or     %al,0xe(%esi)
 8048685:	0c 4a                	or     $0x4a,%al
 8048687:	0f 0b                	ud2    
 8048689:	74 04                	je     804868f <_IO_stdin_used+0x93>
 804868b:	78 00                	js     804868d <_IO_stdin_used+0x91>
 804868d:	3f                   	aas    
 804868e:	1a 3b                	sbb    (%ebx),%bh
 8048690:	2a 32                	sub    (%edx),%dh
 8048692:	24 22                	and    $0x22,%al
 8048694:	1c 00                	sbb    $0x0,%al
 8048696:	00 00                	add    %al,(%eax)
 8048698:	40                   	inc    %eax
 8048699:	00 00                	add    %al,(%eax)
 804869b:	00 f8                	add    %bh,%al
 804869d:	fd                   	std    
 804869e:	ff                   	(bad)  
 804869f:	ff 97 00 00 00 00    	call   *0x0(%edi)
 80486a5:	41                   	inc    %ecx
 80486a6:	0e                   	push   %cs
 80486a7:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 80486ad:	02 93 c5 0c 04 04    	add    0x4040cc5(%ebx),%dl
 80486b3:	00 38                	add    %bh,(%eax)
 80486b5:	00 00                	add    %al,(%eax)
 80486b7:	00 60 00             	add    %ah,0x0(%eax)
 80486ba:	00 00                	add    %al,(%eax)
 80486bc:	74 fe                	je     80486bc <_IO_stdin_used+0xc0>
 80486be:	ff                   	(bad)  
 80486bf:	ff 61 00             	jmp    *0x0(%ecx)
 80486c2:	00 00                	add    %al,(%eax)
 80486c4:	00 41 0e             	add    %al,0xe(%ecx)
 80486c7:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 80486cd:	87 03                	xchg   %eax,(%ebx)
 80486cf:	41                   	inc    %ecx
 80486d0:	0e                   	push   %cs
 80486d1:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 80486d7:	83 05 4e 0e 30 02 4a 	addl   $0x4a,0x2300e4e
 80486de:	0e                   	push   %cs
 80486df:	14 41                	adc    $0x41,%al
 80486e1:	0e                   	push   %cs
 80486e2:	10 c3                	adc    %al,%bl
 80486e4:	41                   	inc    %ecx
 80486e5:	0e                   	push   %cs
 80486e6:	0c c6                	or     $0xc6,%al
 80486e8:	41                   	inc    %ecx
 80486e9:	0e                   	push   %cs
 80486ea:	08 c7                	or     %al,%bh
 80486ec:	41                   	inc    %ecx
 80486ed:	0e                   	push   %cs
 80486ee:	04 c5                	add    $0xc5,%al
 80486f0:	10 00                	adc    %al,(%eax)
 80486f2:	00 00                	add    %al,(%eax)
 80486f4:	9c                   	pushf  
 80486f5:	00 00                	add    %al,(%eax)
 80486f7:	00 a8 fe ff ff 02    	add    %ch,0x2fffffe(%eax)
 80486fd:	00 00                	add    %al,(%eax)
 80486ff:	00 00                	add    %al,(%eax)
 8048701:	00 00                	add    %al,(%eax)
 8048703:	00 10                	add    %dl,(%eax)
 8048705:	00 00                	add    %al,(%eax)
 8048707:	00 b0 00 00 00 96    	add    %dh,-0x6a000000(%eax)
 804870d:	fe                   	(bad)  
 804870e:	ff                   	(bad)  
 804870f:	ff 04 00             	incl   (%eax,%eax,1)
 8048712:	00 00                	add    %al,(%eax)
 8048714:	00 00                	add    %al,(%eax)
	...

08048718 <__FRAME_END__>:
 8048718:	00 00                	add    %al,(%eax)
	...

Disassembly of section .ctors:

08049f14 <__CTOR_LIST__>:
 8049f14:	ff                   	(bad)  
 8049f15:	ff                   	(bad)  
 8049f16:	ff                   	(bad)  
 8049f17:	ff 00                	incl   (%eax)

08049f18 <__CTOR_END__>:
 8049f18:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dtors:

08049f1c <__DTOR_LIST__>:
 8049f1c:	ff                   	(bad)  
 8049f1d:	ff                   	(bad)  
 8049f1e:	ff                   	(bad)  
 8049f1f:	ff 00                	incl   (%eax)

08049f20 <__DTOR_END__>:
 8049f20:	00 00                	add    %al,(%eax)
	...

Disassembly of section .jcr:

08049f24 <__JCR_END__>:
 8049f24:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynamic:

08049f28 <_DYNAMIC>:
 8049f28:	01 00                	add    %eax,(%eax)
 8049f2a:	00 00                	add    %al,(%eax)
 8049f2c:	10 00                	adc    %al,(%eax)
 8049f2e:	00 00                	add    %al,(%eax)
 8049f30:	0c 00                	or     $0x0,%al
 8049f32:	00 00                	add    %al,(%eax)
 8049f34:	30 83 04 08 0d 00    	xor    %al,0xd0804(%ebx)
 8049f3a:	00 00                	add    %al,(%eax)
 8049f3c:	dc 85 04 08 f5 fe    	faddl  -0x10af7fc(%ebp)
 8049f42:	ff 6f ac             	ljmp   *-0x54(%edi)
 8049f45:	81 04 08 05 00 00 00 	addl   $0x5,(%eax,%ecx,1)
 8049f4c:	5c                   	pop    %esp
 8049f4d:	82                   	(bad)  
 8049f4e:	04 08                	add    $0x8,%al
 8049f50:	06                   	push   %es
 8049f51:	00 00                	add    %al,(%eax)
 8049f53:	00 cc                	add    %cl,%ah
 8049f55:	81 04 08 0a 00 00 00 	addl   $0xa,(%eax,%ecx,1)
 8049f5c:	61                   	popa   
 8049f5d:	00 00                	add    %al,(%eax)
 8049f5f:	00 0b                	add    %cl,(%ebx)
 8049f61:	00 00                	add    %al,(%eax)
 8049f63:	00 10                	add    %dl,(%eax)
 8049f65:	00 00                	add    %al,(%eax)
 8049f67:	00 15 00 00 00 00    	add    %dl,0x0
 8049f6d:	00 00                	add    %al,(%eax)
 8049f6f:	00 03                	add    %al,(%ebx)
 8049f71:	00 00                	add    %al,(%eax)
 8049f73:	00 f4                	add    %dh,%ah
 8049f75:	9f                   	lahf   
 8049f76:	04 08                	add    $0x8,%al
 8049f78:	02 00                	add    (%eax),%al
 8049f7a:	00 00                	add    %al,(%eax)
 8049f7c:	38 00                	cmp    %al,(%eax)
 8049f7e:	00 00                	add    %al,(%eax)
 8049f80:	14 00                	adc    $0x0,%al
 8049f82:	00 00                	add    %al,(%eax)
 8049f84:	11 00                	adc    %eax,(%eax)
 8049f86:	00 00                	add    %al,(%eax)
 8049f88:	17                   	pop    %ss
 8049f89:	00 00                	add    %al,(%eax)
 8049f8b:	00 f8                	add    %bh,%al
 8049f8d:	82                   	(bad)  
 8049f8e:	04 08                	add    $0x8,%al
 8049f90:	11 00                	adc    %eax,(%eax)
 8049f92:	00 00                	add    %al,(%eax)
 8049f94:	f0 82                	lock (bad) 
 8049f96:	04 08                	add    $0x8,%al
 8049f98:	12 00                	adc    (%eax),%al
 8049f9a:	00 00                	add    %al,(%eax)
 8049f9c:	08 00                	or     %al,(%eax)
 8049f9e:	00 00                	add    %al,(%eax)
 8049fa0:	13 00                	adc    (%eax),%eax
 8049fa2:	00 00                	add    %al,(%eax)
 8049fa4:	08 00                	or     %al,(%eax)
 8049fa6:	00 00                	add    %al,(%eax)
 8049fa8:	fe                   	(bad)  
 8049fa9:	ff                   	(bad)  
 8049faa:	ff 6f d0             	ljmp   *-0x30(%edi)
 8049fad:	82                   	(bad)  
 8049fae:	04 08                	add    $0x8,%al
 8049fb0:	ff                   	(bad)  
 8049fb1:	ff                   	(bad)  
 8049fb2:	ff 6f 01             	ljmp   *0x1(%edi)
 8049fb5:	00 00                	add    %al,(%eax)
 8049fb7:	00 f0                	add    %dh,%al
 8049fb9:	ff                   	(bad)  
 8049fba:	ff 6f be             	ljmp   *-0x42(%edi)
 8049fbd:	82                   	(bad)  
 8049fbe:	04 08                	add    $0x8,%al
	...

Disassembly of section .got:

08049ff0 <.got>:
 8049ff0:	00 00                	add    %al,(%eax)
	...

Disassembly of section .got.plt:

08049ff4 <_GLOBAL_OFFSET_TABLE_>:
 8049ff4:	28 9f 04 08 00 00    	sub    %bl,0x804(%edi)
 8049ffa:	00 00                	add    %al,(%eax)
 8049ffc:	00 00                	add    %al,(%eax)
 8049ffe:	00 00                	add    %al,(%eax)
 804a000:	76 83                	jbe    8049f85 <_DYNAMIC+0x5d>
 804a002:	04 08                	add    $0x8,%al
 804a004:	86 83 04 08 96 83    	xchg   %al,-0x7c69f7fc(%ebx)
 804a00a:	04 08                	add    $0x8,%al
 804a00c:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
 804a00d:	83 04 08 b6          	addl   $0xffffffb6,(%eax,%ecx,1)
 804a011:	83 04 08 c6          	addl   $0xffffffc6,(%eax,%ecx,1)
 804a015:	83 04 08 d6          	addl   $0xffffffd6,(%eax,%ecx,1)
 804a019:	83                   	.byte 0x83
 804a01a:	04 08                	add    $0x8,%al

Disassembly of section .data:

0804a01c <__data_start>:
 804a01c:	00 00                	add    %al,(%eax)
	...

0804a020 <__dso_handle>:
 804a020:	00 00                	add    %al,(%eax)
	...

Disassembly of section .bss:

0804a024 <completed.6159>:
 804a024:	00 00                	add    %al,(%eax)
	...

0804a028 <dtor_idx.6161>:
 804a028:	00 00                	add    %al,(%eax)
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x80482b8>
   a:	74 75                	je     81 <_init-0x80482af>
   c:	2f                   	das    
   d:	4c                   	dec    %esp
   e:	69 6e 61 72 6f 20 34 	imul   $0x34206f72,0x61(%esi),%ebp
  15:	2e 36 2e 33 2d 31 75 	cs ss xor %cs:%ss:0x75627531,%ebp
  1c:	62 75 
  1e:	6e                   	outsb  %ds:(%esi),(%dx)
  1f:	74 75                	je     96 <_init-0x804829a>
  21:	35 29 20 34 2e       	xor    $0x2e342029,%eax
  26:	36 2e 33 00          	ss xor %cs:%ss:(%eax),%eax
c = 0
